/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.DBMS_GUI;


import com.DBMS_Model.DBMS_DAO;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Abdul Jabbar
 */
public class Main_Page extends javax.swing.JFrame {

    /**
     * Creates new form Main_Page
     */
    
        /*home.removeAll();
        home.add(MainList);
        home.repaint();
        home.revalidate();*/
        static Login_Page lp=new Login_Page();
        static DBMS_DAO db=new DBMS_DAO();
        static Selection_Page sp=new Selection_Page();
    public Main_Page() {
     
        initComponents();
            
        emp_Table.setEnabled(false);
        emp_Table3.setEnabled(false);
        emp_Table4.setEnabled(false);
    
        
        emp_Table.getTableHeader().setFont(new Font("Times New Roman",Font.PLAIN,16));
        emp_Table.getTableHeader().setOpaque(false);
        emp_Table.getTableHeader().setBackground(new Color(118, 93, 105));
        emp_Table.getTableHeader().setForeground(new Color(34, 49, 63));
        emp_Table.setRowHeight(20);
        
        emp_Table3.getTableHeader().setFont(new Font("Times New Roman",Font.PLAIN,16));
        emp_Table3.getTableHeader().setOpaque(false);
        emp_Table3.getTableHeader().setBackground(new Color(118, 93, 105));
        emp_Table3.getTableHeader().setForeground(new Color(34, 49, 63));
        emp_Table3.setRowHeight(20);
        
        emp_Table4.getTableHeader().setFont(new Font("Times New Roman",Font.PLAIN,16));
        emp_Table4.getTableHeader().setOpaque(false);
        emp_Table4.getTableHeader().setBackground(new Color(118, 93, 105));
        emp_Table4.getTableHeader().setForeground(new Color(34, 49, 63));
        emp_Table4.setRowHeight(20);
          //   e.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        card = new javax.swing.JPanel();
        home = new javax.swing.JPanel();
        admin = new javax.swing.JPanel();
        comboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        emp_Table = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        insert_button_admin = new javax.swing.JButton();
        update_button_admin = new javax.swing.JButton();
        delete_button_admin = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        employee = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        emp_Table3 = new javax.swing.JTable();
        jTextField4 = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        comboBox1_emp = new javax.swing.JComboBox();
        delete_button_employee = new javax.swing.JButton();
        update_button_employee = new javax.swing.JButton();
        insert_button_employee = new javax.swing.JButton();
        student = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        emp_Table4 = new javax.swing.JTable();
        jTextField5 = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        comboBox2_student = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        home.setLayout(new java.awt.CardLayout());

        admin.setBackground(new java.awt.Color(35, 203, 167));

        comboBox.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        comboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Table Name", "Employee", "Course", "Course_Book", "Book_Author", "Notes", "Project", "TTP", "Thesis", "Publication" }));
        comboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        emp_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(emp_Table);
        if (emp_Table.getColumnModel().getColumnCount() > 0) {
            emp_Table.getColumnModel().getColumn(0).setResizable(false);
            emp_Table.getColumnModel().getColumn(1).setResizable(false);
            emp_Table.getColumnModel().getColumn(2).setResizable(false);
            emp_Table.getColumnModel().getColumn(3).setResizable(false);
        }

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        insert_button_admin.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        insert_button_admin.setText("Insert");
        insert_button_admin.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(150, 40, 27), 3), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(42, 187, 155))));
        insert_button_admin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        insert_button_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_button_adminActionPerformed(evt);
            }
        });

        update_button_admin.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        update_button_admin.setText("Update");
        update_button_admin.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(150, 40, 27), 3), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(42, 187, 155))));
        update_button_admin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update_button_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_button_adminActionPerformed(evt);
            }
        });

        delete_button_admin.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        delete_button_admin.setText("Delete");
        delete_button_admin.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(150, 40, 27), 3), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(42, 187, 155))));
        delete_button_admin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_button_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_button_adminActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton2.setText("Log Out");
        jButton2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(150, 40, 27), 3), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(42, 187, 155))));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminLayout = new javax.swing.GroupLayout(admin);
        admin.setLayout(adminLayout);
        adminLayout.setHorizontalGroup(
            adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLayout.createSequentialGroup()
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(insert_button_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(update_button_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(delete_button_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 93, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(adminLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        adminLayout.setVerticalGroup(
            adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(delete_button_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(insert_button_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(update_button_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        home.add(admin, "card2");

        employee.setBackground(new java.awt.Color(42, 187, 155));

        emp_Table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(emp_Table3);
        if (emp_Table3.getColumnModel().getColumnCount() > 0) {
            emp_Table3.getColumnModel().getColumn(0).setResizable(false);
            emp_Table3.getColumnModel().getColumn(1).setResizable(false);
            emp_Table3.getColumnModel().getColumn(2).setResizable(false);
            emp_Table3.getColumnModel().getColumn(3).setResizable(false);
        }

        jTextField4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextField4.setToolTipText("");
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(52, 73, 94));
        jButton15.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton15.setText("Log Out");
        jButton15.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(226, 106, 106), 3, true));
        jButton15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        comboBox1_emp.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        comboBox1_emp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Table Name", "Employee", "Course", "Course_Book", "Book_Author", "Notes", "Project", "TTP", "Thesis", "Publication" }));
        comboBox1_emp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboBox1_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox1_empActionPerformed(evt);
            }
        });

        delete_button_employee.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        delete_button_employee.setText("Delete");
        delete_button_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_button_employeeActionPerformed(evt);
            }
        });

        update_button_employee.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        update_button_employee.setText("Update");
        update_button_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_button_employeeActionPerformed(evt);
            }
        });

        insert_button_employee.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        insert_button_employee.setText("Insert");
        insert_button_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_button_employeeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout employeeLayout = new javax.swing.GroupLayout(employee);
        employee.setLayout(employeeLayout);
        employeeLayout.setHorizontalGroup(
            employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeeLayout.createSequentialGroup()
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(employeeLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(insert_button_employee, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(update_button_employee, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(delete_button_employee, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 145, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(employeeLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(comboBox1_emp, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(192, 192, 192)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        employeeLayout.setVerticalGroup(
            employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeeLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBox1_emp, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(insert_button_employee, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_button_employee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update_button_employee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        home.add(employee, "card2");

        student.setBackground(new java.awt.Color(162, 222, 208));
        student.setToolTipText("");

        emp_Table4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(emp_Table4);
        if (emp_Table4.getColumnModel().getColumnCount() > 0) {
            emp_Table4.getColumnModel().getColumn(0).setResizable(false);
            emp_Table4.getColumnModel().getColumn(1).setResizable(false);
            emp_Table4.getColumnModel().getColumn(2).setResizable(false);
            emp_Table4.getColumnModel().getColumn(3).setResizable(false);
        }

        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton16.setText("Log Out");
        jButton16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        comboBox2_student.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        comboBox2_student.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Table Name", "Employee", "Course", "Course_Book", "Book_Author", "Notes", "Project", "TTP", "Thesis", "Publication" }));
        comboBox2_student.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboBox2_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox2_studentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentLayout = new javax.swing.GroupLayout(student);
        student.setLayout(studentLayout);
        studentLayout.setHorizontalGroup(
            studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLayout.createSequentialGroup()
                .addGroup(studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(comboBox2_student, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)))
                .addContainerGap())
        );
        studentLayout.setVerticalGroup(
            studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboBox2_student))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        home.add(student, "card2");

        javax.swing.GroupLayout cardLayout = new javax.swing.GroupLayout(card);
        card.setLayout(cardLayout);
        cardLayout.setHorizontalGroup(
            cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        cardLayout.setVerticalGroup(
            cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(card, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(card, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    static String getComboName=null;
    ResultSet rs=null;
    
    
    public void emp_table(){
//        DBMS_DAO db=new DBMS_DAO();
        rs=db.getEmployee();
        if(getComboName.equalsIgnoreCase("comboBox")){
            //emp_Table.setRowSorter(sorter);
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
        
    }
    public void book_authuor_table(){
        
        rs=db.getBookAuthor();
        if(getComboName.equalsIgnoreCase("comboBox")){
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }
    public void course_table(){
//        DBMS_DAO db=new DBMS_DAO();
        rs=db.getCourse();
        if(getComboName.equalsIgnoreCase("comboBox")){
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }
    public void course_book_table(){
   //     DBMS_DAO db=new DBMS_DAO();
        rs=db.getCourseBook();
        if(getComboName.equalsIgnoreCase("comboBox")){
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }
    public void notes_table(){
//        DBMS_DAO db=new DBMS_DAO();
        rs=db.getNotes();
        if(getComboName.equalsIgnoreCase("comboBox")){
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }
    public void project_table(){
      //  DBMS_DAO db=new DBMS_DAO();
        rs=db.getProject();
        if(getComboName.equalsIgnoreCase("comboBox")){
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }
    public void publications_table(){
//        DBMS_DAO db=new DBMS_DAO();
        rs=db.getPublication();
        if(getComboName.equalsIgnoreCase("comboBox")){
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }
    public void thesis_table(){
//        DBMS_DAO db=new DBMS_DAO();
        rs=db.getThesis();
        if(getComboName.equalsIgnoreCase("comboBox")){
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }
    public void ttp_table(){
//        DBMS_DAO db=new DBMS_DAO();
        rs=db.getTtp();
        if(getComboName.equalsIgnoreCase("comboBox")){
            emp_Table.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox1_emp")){
            emp_Table3.setModel(DbUtils.resultSetToTableModel(rs));
        }else if(getComboName.equalsIgnoreCase("comboBox2_student")){
            emp_Table4.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }
    Anomalies_Page ap=new Anomalies_Page();
    static String str=null;
    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
        // TODO add your handling code here:
        str=comboBox.getSelectedItem().toString();
        getComboName="comboBox";
        //System.out.println(comboBox);
        System.out.println(str);
        if(str.equalsIgnoreCase("Employee")){
            this.emp_table();// emp_table();
        }else if(str.equalsIgnoreCase("Course")){
            course_table();
        }else if(str.equalsIgnoreCase("Course_Book")){
            course_book_table();
        }else if(str.equalsIgnoreCase("Book_Author")){
            book_authuor_table();
        }else if(str.equalsIgnoreCase("Notes")){
            notes_table();
        }else if(str.equalsIgnoreCase("Project")){
            project_table();
        }else if(str.equalsIgnoreCase("TTP")){
            ttp_table();
        }else if(str.equalsIgnoreCase("Thesis")){
            thesis_table();
        }else if(str.equalsIgnoreCase("Publication")){
            publications_table();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_comboBoxActionPerformed

    private void insert_button_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_button_adminActionPerformed
        // TODO add your handling code here:
        str=comboBox.getSelectedItem().toString();
        //ap.setComboBox(str, insert_button_employee.getText());
        str=comboBox.getSelectedItem().toString();
        if(str.equalsIgnoreCase("Employee")){
            this.dispose();
            ap.setVisible(true);
            ap.emp();
        }else if(str.equalsIgnoreCase("Course")){
            this.dispose();
            ap.setVisible(true);
            ap.emp1();
        }else if(str.equalsIgnoreCase("Course_Book")){
            this.dispose();
            ap.setVisible(true);
            ap.emp2();
        }else if(str.equalsIgnoreCase("Book_Author")){
            this.dispose();
            ap.setVisible(true);
            ap.emp3();
        }else if(str.equalsIgnoreCase("Notes")){
            this.dispose();
            ap.setVisible(true);
            ap.emp4();
        }else if(str.equalsIgnoreCase("Project")){
            this.dispose();
            ap.setVisible(true);
            ap.emp7();
        }else if(str.equalsIgnoreCase("TTP")){
            this.dispose();
            ap.setVisible(true);
            ap.emp5();
        }else if(str.equalsIgnoreCase("Thesis")){
            this.dispose();
            ap.setVisible(true);
            ap.emp8();
        }else if(str.equalsIgnoreCase("Publication")){
            this.dispose();
            ap.setVisible(true);
            ap.emp6();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_insert_button_adminActionPerformed

    private void update_button_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_button_adminActionPerformed

        str=comboBox.getSelectedItem().toString();
        ap.setComboBox(str, update_button_admin.getText());
        if(str.equalsIgnoreCase("Employee")){
            this.dispose();
            ap.setVisible(true);
            ap.emp();
        }else if(str.equalsIgnoreCase("Course")){
            this.dispose();
            ap.setVisible(true);
            ap.emp1();
        }else if(str.equalsIgnoreCase("Course_Book")){
            this.dispose();
            ap.setVisible(true);
            ap.emp2();
        }else if(str.equalsIgnoreCase("Book_Author")){
            this.dispose();
            ap.setVisible(true);
            ap.emp3();
        }else if(str.equalsIgnoreCase("Notes")){
            this.dispose();
            ap.setVisible(true);
            ap.emp4();
        }else if(str.equalsIgnoreCase("Project")){
            this.dispose();
            ap.setVisible(true);
            ap.emp7();
        }else if(str.equalsIgnoreCase("TTP")){
            this.dispose();
            ap.setVisible(true);
            ap.emp5();
        }else if(str.equalsIgnoreCase("Thesis")){
            this.dispose();
            ap.setVisible(true);
            ap.emp8();
        }else if(str.equalsIgnoreCase("Publication")){
            this.dispose();
            ap.setVisible(true);
            ap.emp6();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_update_button_adminActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
//        Selection_Page sp=new Selection_Page();
        this.dispose();
        sp.setVisible(true);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//        Selection_Page sp=new Selection_Page();
        this.dispose();
        sp.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
//        Selection_Page sp=new Selection_Page();
        this.dispose();
        sp.setVisible(true);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void delete_button_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_button_adminActionPerformed
        // TODO add your handling code here:
        str=comboBox.getSelectedItem().toString();
        ap.setComboBox(str, delete_button_admin.getText());
        if(str.equalsIgnoreCase("Employee")){
            this.dispose();
            ap.setVisible(true);
            ap.emp();
        }else if(str.equalsIgnoreCase("Course")){
            this.dispose();
            ap.setVisible(true);
            ap.emp1();
        }else if(str.equalsIgnoreCase("Course_Book")){
            this.dispose();
            ap.setVisible(true);
            ap.emp2();
        }else if(str.equalsIgnoreCase("Book_Author")){
            this.dispose();
            ap.setVisible(true);
            ap.emp3();
        }else if(str.equalsIgnoreCase("Notes")){
            this.dispose();
            ap.setVisible(true);
            ap.emp4();
        }else if(str.equalsIgnoreCase("Project")){
            this.dispose();
            ap.setVisible(true);
            ap.emp7();
        }else if(str.equalsIgnoreCase("TTP")){
            this.dispose();
            ap.setVisible(true);
            ap.emp5();
        }else if(str.equalsIgnoreCase("Thesis")){
            this.dispose();
            ap.setVisible(true);
            ap.emp8();
        }else if(str.equalsIgnoreCase("Publication")){
            this.dispose();
            ap.setVisible(true);
            ap.emp6();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_delete_button_adminActionPerformed

    private void comboBox1_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox1_empActionPerformed
        // TODO add your handling code here:
        
        str=comboBox1_emp.getSelectedItem().toString();
        getComboName="comboBox1_emp";
        System.out.println(str);
        if(str.equalsIgnoreCase("Employee")){
            emp_table();// emp_table();
        }else if(str.equalsIgnoreCase("Course")){
            course_table();
        }else if(str.equalsIgnoreCase("Course_Book")){
            course_book_table();
        }else if(str.equalsIgnoreCase("Book_Author")){
            book_authuor_table();
        }else if(str.equalsIgnoreCase("Notes")){
            notes_table();
        }else if(str.equalsIgnoreCase("Project")){
            project_table();
        }else if(str.equalsIgnoreCase("TTP")){
            ttp_table();
        }else if(str.equalsIgnoreCase("Thesis")){
            thesis_table();
        }else if(str.equalsIgnoreCase("Publication")){
            publications_table();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_comboBox1_empActionPerformed

    private void delete_button_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_button_employeeActionPerformed
        // TODO add your handling code here:\
        int i=99;
        str=comboBox1_emp.getSelectedItem().toString();
        ap.setComboBox(str,delete_button_employee.getText());
        
        if(str.equalsIgnoreCase("Employee")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(delete_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Course")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(delete_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Course_Book")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(delete_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Book_Author")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(delete_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Notes")){
            this.dispose();
            ap.setVisible(true);
            ap.emp4();
        }else if(str.equalsIgnoreCase("Project")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(delete_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("TTP")){
            this.dispose();
            ap.setVisible(true);
            ap.emp5();
        }else if(str.equalsIgnoreCase("Thesis")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(delete_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Publication")){
            this.dispose();
            ap.setVisible(true);
            ap.emp6();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_delete_button_employeeActionPerformed

    private void update_button_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_button_employeeActionPerformed
        // TODO add your handling code here:
        int i=99;
        str=comboBox1_emp.getSelectedItem().toString();
        //ap.setComboBox(str,update_button_employee.getText());
        
        if(str.equalsIgnoreCase("Employee")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(update_button_employee.getText(),str);
                this.dispose();
                //ap.setComboBox(str,update_button_employee.getText());
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Course")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(update_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Course_Book")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(update_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Book_Author")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(update_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Notes")){
            this.dispose();
            ap.setVisible(true);
            ap.emp4();
        }else if(str.equalsIgnoreCase("Project")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(update_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("TTP")){
            this.dispose();
            ap.setVisible(true);
            ap.emp5();
        }else if(str.equalsIgnoreCase("Thesis")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(update_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Publication")){
            this.dispose();
            ap.setVisible(true);
            ap.emp6();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_update_button_employeeActionPerformed

    private void insert_button_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_button_employeeActionPerformed
        // TODO add your handling code here:
        int i=99;
        str=comboBox1_emp.getSelectedItem().toString();
        //ap.setComboBox(str,insert_button_employee.getText());
        
        if(str.equalsIgnoreCase("Employee")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(insert_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Course")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(insert_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Course_Book")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(insert_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Book_Author")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(insert_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Notes")){
            this.dispose();
            ap.setVisible(true);
            ap.emp4();
        }else if(str.equalsIgnoreCase("Project")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(insert_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("TTP")){
            this.dispose();
            ap.setVisible(true);
            ap.emp5();
        }else if(str.equalsIgnoreCase("Thesis")){
            i=JOptionPane.showConfirmDialog(this,"Do you want to change the table", "Message",JOptionPane.OK_CANCEL_OPTION);
            if(i==0){
                Login_Page.setButtonName(insert_button_employee.getText(),str);
                this.dispose();
                lp.setVisible(true);
                lp.getAdmin();
            }
        }else if(str.equalsIgnoreCase("Publication")){
            this.dispose();
            ap.setVisible(true);
            ap.emp6();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_insert_button_employeeActionPerformed

    private void comboBox2_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox2_studentActionPerformed
        // TODO add your handling code here:
        str=comboBox2_student.getSelectedItem().toString();
        getComboName="comboBox2_student";
        System.out.println(str);
        if(str.equalsIgnoreCase("Employee")){
            this.emp_table();
        }else if(str.equalsIgnoreCase("Course")){
            course_table();
        }else if(str.equalsIgnoreCase("Course_Book")){
            course_book_table();
        }else if(str.equalsIgnoreCase("Book_Author")){
            book_authuor_table();
        }else if(str.equalsIgnoreCase("Notes")){
            notes_table();
        }else if(str.equalsIgnoreCase("Project")){
            project_table();
        }else if(str.equalsIgnoreCase("TTP")){
            ttp_table();
        }else if(str.equalsIgnoreCase("Thesis")){
            thesis_table();
        }else if(str.equalsIgnoreCase("Publication")){
            publications_table();
        }else if(str.equalsIgnoreCase("Select Table Name")){
            JOptionPane.showMessageDialog(this, "You are not setect any Table Name");
        }
    }//GEN-LAST:event_comboBox2_studentActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        DefaultTableModel t=(DefaultTableModel)emp_Table.getModel();
        String search=jTextField1.getText();
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(t);
        emp_Table.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search.trim()));
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        // TODO add your handling code here:
        DefaultTableModel t=(DefaultTableModel)emp_Table3.getModel();
        String search=jTextField4.getText();
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(t);
        emp_Table3.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search.trim()));

    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        // TODO add your handling code here:
        DefaultTableModel t=(DefaultTableModel)emp_Table4.getModel();
        String search=jTextField5.getText();
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(t);
        emp_Table4.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search.trim()));
    }//GEN-LAST:event_jTextField5KeyReleased

    public void getAdmin(){
        this.setTitle("Admin");
        home.removeAll();
        home.add(admin);
        home.repaint();
        home.revalidate();
    }
    public void getEmployee(){
        this.setTitle("Employee");
        home.removeAll();
        home.add(employee);
        home.repaint();
        home.revalidate();
    }
    public void getStudent(){
        this.setTitle("Student");
        home.removeAll();
        home.add(student);
        home.repaint();
        home.revalidate();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              new Main_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel admin;
    private javax.swing.JPanel card;
    private javax.swing.JComboBox comboBox;
    private javax.swing.JComboBox comboBox1_emp;
    private javax.swing.JComboBox comboBox2_student;
    private javax.swing.JButton delete_button_admin;
    private javax.swing.JButton delete_button_employee;
    private javax.swing.JTable emp_Table;
    private javax.swing.JTable emp_Table3;
    private javax.swing.JTable emp_Table4;
    private javax.swing.JPanel employee;
    private javax.swing.JPanel home;
    private javax.swing.JButton insert_button_admin;
    private javax.swing.JButton insert_button_employee;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JPanel student;
    private javax.swing.JButton update_button_admin;
    private javax.swing.JButton update_button_employee;
    // End of variables declaration//GEN-END:variables
}
